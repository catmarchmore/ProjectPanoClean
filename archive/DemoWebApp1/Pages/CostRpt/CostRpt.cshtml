@page
@model ProjectPano.Pages.CostRpt.IndexModel
@{
}
<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css">
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js"></script>
<script src="https://cdn.sheetjs.com/xlsx-latest/package/dist/xlsx.full.min.js"></script>


<h1 class="custom-h1">Cost Report</h1>
<h6>Bigtime Actuals Updated: 
    @if (Model.MaxDateStamp.HasValue)
    {
        @Model.MaxDateStamp.Value.ToString("yyyy-MM-dd HH:mm:ss")
    }
    else
    {
        <span>Not Available</span>
    }
	</h6>
<h5 style="font-weight:bold;"> Manager: @Model.thisVWJob.MgrName</h5>
<br/>
<a href="/JobIndex/Index">Back to Job List</a>
<br />
<br />

<table id="myExcelTable" class="table table-hover table-bordered">
    <thead>
        <tr class="custom-header-costrpt1">
            <th colspan="19" class="header-spanning">@Model.thisVWJob.ClientNameShort : @Model.thisVWJob.JobName</th>
        </tr>
        <tr class="custom-header-costrpt1">
            <th colspan="19" class="header-spanning">
                <strong>Cost Report as of: </strong>[need to program report WE date]</th>
        </tr>
        <!-- Group Header Row -->
        <tr class="custom-header-costrpt2">
            <th></th>
            <th colspan="7" class="text-center colgroup-hours">
                Hours
                <button id="toggleHours" class="btn btn-xs btn-default" style="margin-left:5px;">&gt;</button>
            </th>
            <th colspan="7" class="text-center colgroup-dollars">
                Dollars
                <button id="toggleDollars" class="btn btn-xs btn-default" style="margin-left:5px;">&gt;</button>
            </th>
            <th colspan="3" class="text-center">Percentages</th>
            <th></th>
        </tr>

        <tr class="custom-header-costrpt3">
            <th>Charge Code</th>

            <!-- HOURS -->
            <th class="align-top col-hours">Orig</th>
            <th class="align-top col-hours-toggle">Pending Change</th>
            <th class="align-top col-hours-toggle">Approved Change</th>
            <th class="align-top col-hours">Current Approved</th>
            <th class="align-top col-hours">Cumul Spent</th>
            <th class="align-top col-hours">ETC</th>
            <th class="align-top col-hours">EAC</th>

            <!-- DOLLARS -->
            <th class="align-top col-dollars">Orig</th>
            <th class="align-top col-dollars-toggle">Pending Change</th>
            <th class="align-top col-dollars-toggle">Approved Change</th>
            <th class="align-top col-dollars">Current Approved</th>
            <th class="align-top col-dollars">Cumul Spent</th>
            <th class="align-top col-dollars">ETC</th>
            <th class="align-top col-dollars">EAC</th>

            <th class="align-top">% Hrs Spent</th>
            <th class="align-top">% $ Spent</th>
            <th class="align-top">% Complete</th>
            <th class="align-middle text-center">CPI</th>
        </tr>
    </thead>
    @{
        decimal totalOB_HRS = 0, totalUnApprovedCNHRS = 0, totalApprovedCNHRS = 0, totalCURRHRS = 0;
        decimal totalBILLQTY = 0, totalEACHrs = 0, totalETCHrs = 0;

        decimal totalOB_COST = 0, totalUnApprovedCNCOST = 0, totalApprovedCNCOST = 0;
        decimal totalCURRCOST = 0, totalBILLWITHADMINDISC = 0, totalEAC_Cost = 0, totalETCCost = 0;
    }

    <tbody>
        @foreach (var item in Model.vwBudgetActuals)
        {
            var displayEACCost = item.EAC_Cost == 0 ? item.CURRCOST : item.EAC_Cost;
            var displayETCCost = item.EAC_Cost == 0 ? item.CURRCOST - item.BILLWITHADMINDISC : item.EAC_Cost - item.BILLWITHADMINDISC;

            var displayEACHrs = item.EAC_Hrs == 0 ? item.CURRHRS : item.EAC_Hrs;
            var displayETCHrs = item.EAC_Cost == 0 ? item.CURRHRS - item.BILLQTY : item.EAC_Hrs - item.BILLQTY;

            // Accumulate values
            totalOB_HRS += item.OB_HRS;
            totalUnApprovedCNHRS += item.UnApprovedCNHRS;
            totalApprovedCNHRS += item.ApprovedCNHRS;
            totalCURRHRS += item.CURRHRS;
            totalBILLQTY += item.BILLQTY;
            totalEACHrs += displayEACHrs;
            totalETCHrs += displayETCHrs;

            totalOB_COST += item.OB_COST;
            totalUnApprovedCNCOST += item.UnApprovedCNCOST;
            totalApprovedCNCOST += item.ApprovedCNCOST;
            totalCURRCOST += item.CURRCOST;
            totalBILLWITHADMINDISC += item.BILLWITHADMINDISC;
            totalEAC_Cost += displayEACCost;
            totalETCCost += displayETCCost;

            <tr>
                <td style="min-width:200px; white-space:nowrap;">@item.MYTASK</td>
                <td class="text-right col-hours">@item.OB_HRS.ToString("N0")</td>
                <td class="text-right col-hours-toggle">@item.UnApprovedCNHRS.ToString("N0")</td>
                <td class="text-right col-hours-toggle">@item.ApprovedCNHRS.ToString("N0")</td>
                <td class="text-right col-hours">@item.CURRHRS.ToString("N0")</td>
                <td class="text-right col-hours">@item.BILLQTY.ToString("N0")</td>
                <td class="text-right col-hours @(displayETCHrs<0 ? "text-negative":"")">@displayETCHrs.ToString("N0")</td>
                <td class="text-right col-hours @(displayETCHrs<0 ? "text-negative":"")">@displayEACHrs.ToString("N0")</td>

                <td class="bg-palegreen text-right col-dollars">@item.OB_COST.ToString("C0")</td>
                <td class="bg-palegreen text-right col-dollars-toggle">@item.UnApprovedCNCOST.ToString("C0")</td>
                <td class="bg-palegreen text-right col-dollars-toggle">@item.ApprovedCNCOST.ToString("C0")</td>
                <td class="bg-palegreen text-right col-dollars">@item.CURRCOST.ToString("C0")</td>
                <td class="bg-palegreen text-right col-dollars">@item.BILLWITHADMINDISC.ToString("C0")</td>
                <td class="bg-palegreen text-right col-dollars @(displayETCCost < 0 ? "text-negative" : "")">@displayETCCost.ToString("C0")</td>
                <td class="bg-palegreen text-right  col-dollars@(displayEACCost <0 ? "text-negative" :"")">@displayEACCost.ToString("C0")</td>
                <td class="text-right">
                    @(item.CURRHRS != 0
                        ? String.Format("{0:P0}", item.BILLQTY / item.CURRHRS)
                        : "-")
                </td>
                <td class="text-right">
                    @(item.CURRCOST != 0
                        ? String.Format("{0:P0}", item.BILLWITHADMINDISC / item.CURRCOST)
                        : "-")
                </td>

                <td class="text-right">@item.PctCompl.ToString("P0")</td>
                <td class="text-right">
                    @(item.PctCompl != 0 && item.CURRCOST != 0 && item.BILLWITHADMINDISC != 0
                        ? (item.PctCompl / (item.BILLWITHADMINDISC / item.CURRCOST)).ToString("N2")
                        : "-")
                </td>
            </tr>
        }
    </tbody>

    <tfoot>
        <tr style="font-weight: bold; background-color: #f5f5f5;">
            <td>Total</td>
            <td class="text-right col-hours">@totalOB_HRS.ToString("N0")</td>
            <td class="text-right col-hours-toggle">@totalUnApprovedCNHRS.ToString("N0")</td>
            <td class="text-right col-hours-toggle">@totalApprovedCNHRS.ToString("N0")</td>
            <td class="text-right col-hours">@totalCURRHRS.ToString("N0")</td>
            <td class="text-right col-hours">@totalBILLQTY.ToString("N0")</td>
            <td class="text-right col-hours">@totalETCHrs.ToString("N0")</td>
            <td class="text-right col-hours">@totalEACHrs.ToString("N0")</td>

            <td class="bg-palegreen text-right col-dollars">@totalOB_COST.ToString("C0")</td>
            <td class="bg-palegreen text-right col-dollars-toggle">@totalUnApprovedCNCOST.ToString("C0")</td>
            <td class="bg-palegreen text-right col-dollars-toggle">@totalApprovedCNCOST.ToString("C0")</td>
            <td class="bg-palegreen text-right col-dollars">@totalCURRCOST.ToString("C0")</td>
            <td class="bg-palegreen text-right col-dollars">@totalBILLWITHADMINDISC.ToString("C0")</td>
            <td class="bg-palegreen text-right col-dollars">@totalETCCost.ToString("C0")</td>
            <td class="bg-palegreen text-right col-dollars">@totalEAC_Cost.ToString("C0")</td>


            <td class="text-right">
                @if (totalCURRHRS != 0)
                {
                    @String.Format("{0:P0}", totalBILLQTY / totalCURRHRS)
                }
                else
                {
                    @("-")
                }
            </td>
            <td class="text-right">
                @if (totalCURRCOST != 0)
                {
                    @String.Format("{0:P0}", totalBILLWITHADMINDISC / totalCURRCOST)
                }
                else
                {
                    @("-")
                }
            </td>
            <td class="text-right">–</td> <!-- % Complete total typically not meaningful across tasks -->
            <td class="text-right">
                @if (totalCURRCOST != 0 && totalBILLWITHADMINDISC != 0)
                {
                    @(String.Format("{0:N2}", (totalCURRCOST != 0 ? 1.0m : 0m) / (totalBILLWITHADMINDISC / totalCURRCOST)))
                }
                else
                {
                    @("-")
                }
            </td>
        </tr>
    </tfoot>
</table>

<script>
            // Export filtered visible rows to XLSX
        $("#exportExcel").on("click", function() {
            var table = document.getElementById("myExcelTable");
            var wb = XLSX.utils.book_new();

            // Clone the table so we can remove hidden rows before exporting
            var cloneTable = table.cloneNode(true);

            // Remove rows that are hidden by your filter (display:none)
            var rows = cloneTable.querySelectorAll("tbody tr");
            rows.forEach((row) => {
                if (row.style.display === "none") {
                    row.remove();
                }
            });

            // Convert cleaned table to worksheet
            var ws = XLSX.utils.table_to_sheet(cloneTable);

            // Add worksheet to workbook
            XLSX.utils.book_append_sheet(wb, ws, "FilteredData");

            // Generate a timestamp like 2025-06-07_15-45-32
            var now = new Date();
            var timestamp = now.toISOString().slice(0, 19).replace(/[:T]/g, "-");
            var filename = `FilteredProjects_${timestamp}.xlsx`;

            // Export workbook to XLSX file
            XLSX.writeFile(wb, filename);

        });
</script>

<script>
    const toggleColumns = (toggleClass, groupClass, originalSpan, reducedSpan) => {
        const isHidden = document.querySelector(`.${toggleClass}`).classList.contains("d-none");

        // Toggle visibility of the toggleClass columns
        document.querySelectorAll(`.${toggleClass}`).forEach(el => el.classList.toggle("d-none"));

        // Adjust colspan in the colgroup row
        const headerGroup = document.querySelector(`.${groupClass}`);
        if (headerGroup) {
            headerGroup.colSpan = isHidden ? originalSpan : reducedSpan;
        }

        // Update the full-width rows to match new column count (optional but good)
        const fullWidthHeaders = document.querySelectorAll(".custom-header-costrpt1 .header-spanning");
        fullWidthHeaders.forEach(th => {
            th.colSpan = isHidden ? 19 : 15; // Adjust based on visible columns
        });
    };

    document.getElementById("toggleHours").addEventListener("click", () => {
        toggleColumns("col-hours-toggle", "colgroup-hours", 7, 5);
    });

    document.getElementById("toggleDollars").addEventListener("click", () => {
        toggleColumns("col-dollars-toggle", "colgroup-dollars", 7, 5);
    });
</script>





